---
deployment:
  tasks:
    # Define deployment path
    - export DEPLOYPATH=/home/architex/public_html/axis

    # Prepare the deployment directory
    - /bin/mkdir -p $DEPLOYPATH

    # Copy all project files to deployment path
    - /bin/cp -R app bootstrap config database public resources routes vendor composer.json composer.lock artisan .htaccess $DEPLOYPATH

    # Ensure Vite HMR hot file is not present on production
    - /bin/rm -f $DEPLOYPATH/public/hot

    # Copy environment file
    - /bin/cp .env.production $DEPLOYPATH/.env

    # Create necessary directories
    - /bin/mkdir -p $DEPLOYPATH/storage/framework/sessions
    - /bin/mkdir -p $DEPLOYPATH/storage/framework/views
    - /bin/mkdir -p $DEPLOYPATH/storage/framework/cache
    - /bin/mkdir -p $DEPLOYPATH/storage/app/public
    - /bin/mkdir -p $DEPLOYPATH/bootstrap/cache

    # Copy storage directory (excluding .gitignore files)
    - /bin/cp -R storage $DEPLOYPATH

    # Set proper permissions
    - /bin/chmod -R 755 $DEPLOYPATH/storage
    - /bin/chmod -R 755 $DEPLOYPATH/bootstrap/cache

    # Install composer dependencies
    - cd $DEPLOYPATH && php -d memory_limit=512M /opt/cpanel/composer/bin/composer install --no-dev --optimize-autoloader

    # Install NPM dependencies and build assets
    - cd $DEPLOYPATH && npm install
    - cd $DEPLOYPATH && npm run build && ([ $? -eq 0 ] && /bin/mkdir -p $DEPLOYPATH/public/build && /bin/cp -R dist/. $DEPLOYPATH/public/build/ || ([ -d "build" ] && [ -f "build/manifest.json" ] && /bin/mkdir -p $DEPLOYPATH/public/build && /bin/cp -R build/. $DEPLOYPATH/public/build/ || (echo "Vite build failed or output directory not found, deployment halted." && exit 1)))

    # Run Laravel commands
    - cd $DEPLOYPATH && php artisan key:generate --force
    - cd $DEPLOYPATH && php artisan migrate --force
    - cd $DEPLOYPATH && php artisan config:cache
    - cd $DEPLOYPATH && php artisan route:cache
    - cd $DEPLOYPATH && php artisan view:cache
    - cd $DEPLOYPATH && php artisan storage:link
